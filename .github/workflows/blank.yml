# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    permissions: write-all  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      

      # Runs a set of commands using the runners shell
      - name: Get latest version
        run: git clone https://github.com/TNTwise/REAL-Video-Enhancer.git
        
      - name: Install python dependencies
        run: cd REAL-Video-Enhancer && python3 -m pip install testresources requests opencv-python-headless pypresence pyuic5-tool cx_FREEZE psutil && sudo apt-get -y install python3-pyqt5
        
      - name: Compile to executable
        run: cd REAL-Video-Enhancer && make

      - name: Clone appimage repo
        run: git clone https://github.com/TNTwise/REAL-Video-Enhancer-AppImage.git

      - name: Move files
        run: mkdir -p REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer.AppDir/usr/bin/ && mv REAL-Video-Enhancer/dist/* REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer.AppDir/usr/bin/ && mv REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer.AppDir/usr/bin/main REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer.AppDir/usr/bin/REAL-Video-Enhancer      

      - name: Make appimage
        run: chmod +x REAL-Video-Enhancer-AppImage/appimagetool-x86_64.AppImage && cd REAL-Video-Enhancer-AppImage/ && ./appimagetool-x86_64.AppImage REAL-Video-Enhancer.AppDir/ 
      
      - name: Save AppImage as artifact
        uses: actions/upload-artifact@v3
        with:
          name: REAL-Video-Enhancer-Appimage
          path: REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer-x86_64.AppImage


      - name: Log
        run: ls
      - name: Generate version and tag
        id: version_tag
        run: |
          version=$(python -c "import random; print(f'{random.randint(1, 10)}.{random.randint(0, 10)}.{random.randint(0, 10)}')")
          tag=$(python -c "import random, string; print(''.join(random.choices(string.ascii_letters, k=8)))")
          echo "Version=$version"
          echo "Tag=$tag"
          echo "::set-output name=version::$version"
          echo "::set-output name=tag::$tag"
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log
        run: ls
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --junk-paths REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer-x86_64.AppImage README.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version_tag.outputs.tag }}
          release_name: Release ${{ steps.version_tag.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ../REAL-Video-Enhancer-AppImage
          asset_name: REAL-Video-Enhancer-Appimage.zip
          asset_content_type: application/zip
        #- name: Save build as artifact
         # uses: actions/upload-artifact@v3
          #with:
           # name: BUILD
            #path: REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer.AppDir/usr/bin/*
  
  
  
  
          
            
