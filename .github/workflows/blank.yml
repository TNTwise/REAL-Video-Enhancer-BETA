 # This is a basic workflow to help you get started with Actions

name: Build-NCNN

# Controls when the workflow will run

on:
  #schedule:
  #  - cron: "0 0 * * *"
  push:
    branches: [ "main" ]
    paths-ignore:
       - '**/.github/workflows/build_mac.yml'
       - '**/.github/workflows/build_cuda.yml'
       - '**/.github/workflows/build_mac_dmg.yml'
       - '**/.github/workflows/*'
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-NCNN:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    permissions: write-all  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      
      - uses: actions/checkout@v3
      
       - name: Checkout code
        run: git clone https://github.com/TNTwise/REAL-Video-Enhancer-BETA.git
        
      # Runs a single command using the runners shell
      - name: Log
        run: ls
      - name: Get last release
        id: last_release
        
        run: |
          cd REAL-Video-Enhancer-BETA
          last_release_tag=$(git describe --tags --abbrev=0)
          last_release_date=$(git log -1 --format="%aI" $last_release_tag)
          echo "::set-output name=last_release_date::$last_release_date"

      - name: Calculate time difference
        id: calculate_time
        run: |
          current_date=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          last_release_date=${{ steps.last_release.outputs.last_release_date }}
          current_timestamp=$(date -d "$current_date" +%s)
          release_timestamp=$(date -d "$last_release_date" +%s)
          time_difference=$((current_timestamp - release_timestamp))
          echo "::set-output name=time_difference::$time_difference"

      - name: Display time difference
        run: |
          time_difference=${{ steps.calculate_time.outputs.time_difference }}
          echo "Time since last release: $((time_difference / 86400)) days"

      # Runs a set of commands using the runners shell
      - name: Get latest version
        run: git clone https://github.com/TNTwise/REAL-Video-Enhancer.git
        
      - name: Install python dependencies
        run: cd REAL-Video-Enhancer && python3 -m pip install -r requirements.txt && python3 -m pip uninstall PyQt5 -y && python3 -m  pip install py-notifier notify2 pillow python-magic testresources requests opencv-python-headless pypresence pyuic5-tool cx_FREEZE psutil PyQt5==5.12 loguru sympy && sudo apt install libnotify-bin -y 
        
      - name: Compile to executable
        run: cd REAL-Video-Enhancer && make

      - name: Clone appimage repo
        run: git clone https://github.com/TNTwise/REAL-Video-Enhancer-AppImage.git

      - name: Move files
        run: mkdir -p REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer.AppDir/usr/bin/ && mv REAL-Video-Enhancer/dist/* REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer.AppDir/usr/bin/ && mv REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer.AppDir/usr/bin/main REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer.AppDir/usr/bin/REAL-Video-Enhancer      
      - name: Move QT Files
        run: | 
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt-continuous-x86_64.AppImage
          ./linuxdeployqt-continuous-x86_64.AppImage --appimage-extract
          rm -rf squashfs-root/usr/bin 
          mv squashfs-root/usr/* REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer.AppDir/usr/
          rm -rf squashfs-root/
          
      - name: Make appimage
        run: chmod +x REAL-Video-Enhancer-AppImage/appimagetool-x86_64.AppImage && cd REAL-Video-Enhancer-AppImage/ && ./appimagetool-x86_64.AppImage REAL-Video-Enhancer.AppDir/ 
      - name: Make archive
        run: |
          python3 -m pip uninstall PyQt5 -y && sudo apt install python3-pyqt5 -y
          mkdir archive-build && cd archive-build
          git clone https://github.com/TNTwise/REAL-Video-Enhancer.git && cd REAL-Video-Enhancer && make && mv dist/main dist/REAL-Video-Enhancer
          rm -rf bin/
          mkdir bin/
          cp -r dist/* bin/
      - name: compress archive
        run: |
          cp -r archive-build/REAL-Video-Enhancer/bin/ bin/
          tar -caf REAL-Video-Enhancer.tar.xz bin/
         
       
        
      - name: Save AppImage as artifact
        uses: actions/upload-artifact@v3
        with:
          name: REAL-Video-Enhancer-Appimage
          path: REAL-Video-Enhancer-AppImage/REAL-Video-Enhancer-x86_64.AppImage
          
      - name: Save Flatpak Archive as artifact
        uses: actions/upload-artifact@v3
        with:
          name: REAL-Video-Enhancer-FLATPAK.tar.xz
          path: REAL-Video-Enhancer.tar.xz
      #- name: Log
      #  run: ls
  
  
  
          
            
